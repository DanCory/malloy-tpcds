// Dimensions

source: customer is table('duckdb:../data/customer.parquet') {
  primary_key: c_customer_sk
}

source: customer_address is table('duckdb:../data/customer_address.parquet') {
  primary_key: ca_address_sk
}

source: customer_demographics is table('duckdb:../data/customer_demographics.parquet') {
  primary_key: cd_demo_sk
}

source: date_dim is table('duckdb:../data/date_dim.parquet') {
  primary_key: d_date_sk
}

source: household_demographics is table('duckdb:../data/household_demographics.parquet') {
  primary_key: hd_demo_sk
}

source: item is table('duckdb:../data/item.parquet') {
  primary_key: i_item_sk
}

source: reason is table('duckdb:../data/reason.parquet') {
  primary_key: r_reason_sk
}

source: store is table('duckdb:../data/store.parquet') {
  primary_key: s_store_sk
}

source: time_dim is table('duckdb:../data/time_dim.parquet') {
  primary_key: t_time_sk
}

// Facts

source: store_returns is table('duckdb:../data/store_returns.parquet') {
  join_one: date_dim on sr_returned_date_sk = date_dim.d_date_sk
  join_one: store on sr_store_sk = store.s_store_sk
  join_one: customer on sr_customer_sk = customer.c_customer_sk

  measure: customer_total_returns is sum(sr_return_amt)
  measure: avg_returns is avg(sr_return_amt)
}

sql: all_sales_qry is ||
  SELECT
    ws_sold_date_sk as sold_date_sk,
    ws_sold_time_sk as sold_time_sk,
    ws_item_sk as item_sk,
    ws_bill_customer_sk as customer_sk,
    ws_ext_sales_price as sales_price,
    ws_wholesale_cost as wholesale_cost,
    ws_list_price as list_price,
    ws_sales_price as sales_price,
    ws_ext_discount_amt as ext_discount_amt,
    ws_ext_sales_price as ext_sales_price,
    ws_ext_wholesale_cost as ext_wholesale_cost,
    ws_ext_list_price as ext_list_price,
    ws_ext_tax as ext_tax,
    ws_coupon_amt as coupon_amt,
    ws_net_paid as net_paid,
    ws_net_paid_inc_tax as net_paid_inc_tax,
    ws_net_profit as net_profit,
    'w' as sale_type
  FROM read_parquet('../data/web_sales.parquet')

  UNION ALL

  SELECT
    cs_sold_date_sk as sold_date_sk,
    cs_sold_time_sk as sold_time_sk,
    cs_item_sk as item_sk,
    cs_bill_customer_sk as customer_sk,
    cs_ext_sales_price as sales_price,
    cs_wholesale_cost as wholesale_cost,
    cs_list_price as list_price,
    cs_sales_price as sales_price,
    cs_ext_discount_amt as ext_discount_amt,
    cs_ext_sales_price as ext_sales_price,
    cs_ext_wholesale_cost as ext_wholesale_cost,
    cs_ext_list_price as ext_list_price,
    cs_ext_tax as ext_tax,
    cs_coupon_amt as coupon_amt,
    cs_net_paid as net_paid,
    cs_net_paid_inc_tax as net_paid_inc_tax,
    cs_net_profit as net_profit,
    'c' as sale_type
  FROM read_parquet('../data/catalog_sales.parquet')

  UNION ALL

  SELECT
    ss_sold_date_sk as sold_date_sk,
    ss_sold_time_sk as sold_time_sk,
    ss_item_sk as item_sk,
    ss_customer_sk as customer_sk,
    ss_ext_sales_price as sales_price,
    ss_wholesale_cost as wholesale_cost,
    ss_list_price as list_price,
    ss_sales_price as sales_price,
    ss_ext_discount_amt as ext_discount_amt,
    ss_ext_sales_price as ext_sales_price,
    ss_ext_wholesale_cost as ext_wholesale_cost,
    ss_ext_list_price as ext_list_price,
    ss_ext_tax as ext_tax,
    ss_coupon_amt as coupon_amt,
    ss_net_paid as net_paid,
    ss_net_paid_inc_tax as net_paid_inc_tax,
    ss_net_profit as net_profit,
    's' as sale_type
  FROM read_parquet('../data/store_sales.parquet')
  ;;
  on "duckdb"
  ;

source: all_sales is from_sql(all_sales_qry) {
  join_one: date_dim on sold_date_sk = date_dim.d_date_sk
  join_one: customer on customer_sk = customer.c_customer_sk
  join_one: item on item_sk = item.i_item_sk

  measure: total_sales is sum((ext_list_price - ext_wholesale_cost - ext_discount_amt + ext_sales_price) / 2)
  measure: total_ext_sales_price is sum(ext_sales_price)
}
